// Name:            Grid
// Description:     Styles for the grid system
//
// Namespace:       `grid`
//
// Modifiers:       ``
//
// States:          ``
//
// ========================================================================


// Variables
// ========================================================================

$gutter-width        : 4rem;
$outer-margin        : 4rem;
$gutter-compensation : 1.6rem;
$half-gutter-width   : calc(#{$gutter-width} * .5);
$sm-min              : 57rem;
$md-min              : 84rem;
$lg-min              : 96rem;

$grid-size-10        : percentage(1/12);
$grid-size-20        : percentage(2/12);
$grid-size-25        : percentage(3/12);
$grid-size-33        : percentage(4/12);
$grid-size-40        : percentage(5/12);
$grid-size-50        : percentage(6/12);
$grid-size-60        : percentage(7/12);
$grid-size-66        : percentage(8/12);
$grid-size-75        : percentage(9/12);
$grid-size-80        : percentage(10/12);
$grid-size-90        : percentage(11/12);
$grid-size-100       : 100%;

$breakpoints: (
  "sm": $sm-min,
  "md": $md-min,
  "lg": $lg-min
);

$columns: (
  "1": $grid-size-10,
  "2": $grid-size-20,
  "3": $grid-size-25,
  "4": $grid-size-33,
  "5": $grid-size-40,
  "6": $grid-size-50,
  "7": $grid-size-60,
  "8": $grid-size-66,
  "9": $grid-size-75,
  "10": $grid-size-80,
  "11": $grid-size-90,
  "12": $grid-size-100
);

// Component: Grid
// ========================================================================

.container,
.container--fluid {
  position: relative;
  width: 100%;
  margin-right: auto;
  margin-left: auto;
}

.container {
  max-width: $core-width;
  padding: 0 $gutter-compensation;

  @include media(sm) {
    padding: 0 1rem
  }
}

.container--fluid {
  padding-right: $outer-margin;
  padding-left: $outer-margin;
}

.row {
  display: flex;
  flex: 0 1 auto;
  flex-flow: row wrap;
  justify-content: flex-start;
  margin-right: -$gutter-compensation;
  margin-left: -$gutter-compensation;
  
  &.no-gutters {
    & .col {
      padding: 0;

      &:first-child {
        padding-left: $half-gutter-width;
      }

      &:last-child {
        padding-right: $half-gutter-width;
      }
    }
  }
}


.col {
  flex: 1 0 auto;
  padding-right: $gutter-compensation;
  padding-left: $gutter-compensation;
  max-width: 100%;
  
  @each $breakpoint, $breakpoint-size in $breakpoints {
    @each $name, $size in $columns {
      @include from($breakpoint-size) {
        &.col__#{$breakpoint}-#{$name} {
          flex-basis: $size;
          max-width: $size;
        }

        &.col__#{$breakpoint}--offset-#{$name} {
          margin-left: $size;
        }
      }
    }
  }
}

/**
 * WordPress Generated Classes
 * @link http://codex.wordpress.org/CSS#WordPress_Generated_Classes
 */

/** Media alignment */
.alignnone {
  margin-left: 0;
  margin-right: 0;
  max-width: 100%;
  height: auto;
}

.alignwide {
  margin-left: -10rem;
  margin-right: -10rem;
  max-width: none;

  @include from(sm) {
    margin-left: -2rem;
    margin-right: -2rem;
  }
}

.alignfull {
  width: 100vw;
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
}

.aligncenter {
  display: block;
  margin: (2rem / 2) auto;
  height: auto;
}

.alignleft,
.alignright {
  margin-bottom: (2rem / 2);
  height: auto;
}

@include from(sm) {
  .alignleft {
    float: left;
    margin-right: (2rem / 2);
  }

  .alignright {
    float: right;
    margin-left: (2rem / 2);
  }
}

/** Captions */
// .wp-block-image {
//   @extend .figure;
// }

// .wp-block-image img {
//   @extend .figure-img;
//   @extend .img-fluid;
// }

// .wp-block-image figcaption {
//   @extend .figure-caption;
// }

// /** Text meant only for screen readers */
// .screen-reader-text {
//   @extend .sr-only;
//   @extend .sr-only-focusable;
// }

/** Gutenberg image blocks */
.alignwide.wp-block-image img,
.alignfull.wp-block-image img {
  width: 100vw;
}
